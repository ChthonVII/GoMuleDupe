If I ever feel like it I could test it and make a formula for the items with cold length 0
1H and 2H max/min damage remember?



	/**
	 * COMPLETED
	 * 	//Stage 1: Remove useless(MIGHT NOT BE!!!) mods STASH+CHAR
	//Stage 2: Combine props, like Cold min, cold max, cold res STASH+CHAR
	 * //Stage 3: Group mods such as resistance etc STASH+CHAR
	 * 
//	COMBINE PROPS - EG if you have a rune embedded in an item, need to combine VALS
//	Props such as +skills can appear twice, prop nums: 107,97,188,201,198,204 should be ignored
 * //	COMBINE MAXRES, RES, STATS
	 * 
	 */


//	UNDEAD DAMAGE ON BLUNT
//	if (iType.equals("club") || iType.equals("scep")|| iType.equals("mace") || iType.equals("hamm")) ADD 92, 150

//	APPLY DEF!
//	16 = EN DEF %
//	31 = DEF
//	214 = DEF PER LEVEL

//	EARS NEED CLASS AND LVL ON D2ITEM

	//POTS??

//	APPLY DAMAGE!
//	17 = EN DAMAGE %
//	21 = Min DAMAGE
//	22 = MAX DAMAGE
//	218 = MaxDMG PER LEVEL
//	219 = MaxDMG % per LEVEL

//	APPLY BLOCK!
//	20 = BLOCK

//	APPLY INC MAX DUR!
//	75 = DUR %
//	73 = PLUS DUR
//	REQUREMENTS
//	applyReqLPlus (92)
Eth Damage
+LvlReq

//	+SKILLS CAN CHANGE LVL REQS
//	for (int x = 0; x < iProperties.size(); x = x + 1) {
//	if (((D2ItemProperty) iProperties.get(x)).getiProp() == 107
//	|| ((D2ItemProperty) iProperties.get(x)).getiProp() == 97) {
//	lvlSkills.add(iProperties.get(x));
//	}
//	}
//	if (lvlSkills.size() > 0) {
//	modifyLvl(lvlSkills);
//	}

	//Stage 4: Modify base values for DEF, DMG etc. STASH+CHAR


	/**
	 * INCOMPLETE
	 */


	//Stage 5: Populate modMap to display what properties are being modified CHAR ONLY?  


//	BASE VALS







WEAPON DAMAGE FOR 2H storage etc.






